plugins {
    id 'java'
    id 'war'
    id 'org.sonarqube' version '3.3'
    id 'checkstyle'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.json:json:20220924'
    implementation 'mysql:mysql-connector-java:8.0.11'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'net.bytebuddy:byte-buddy:1.10.14'
    testImplementation 'net.bytebuddy:byte-buddy-agent:1.10.14'
    testImplementation 'org.objenesis:objenesis:2.6'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

war {
    archiveBaseName = 'jobhive'
}

checkstyle {
    toolVersion = '8.43'
    configFile = file("${rootProject.rootDir}/checkstyle.xml")
    showViolations = true
    ignoreFailures = true
    sourceSets = [sourceSets.main]
}

task generateCheckstyleReport(type: Checkstyle) {
    dependsOn checkstyleMain

    doLast {
        // Generate an HTML report
        ant.checkstylereport(
            format: 'html',
            outputfile: file("${buildDir}/checkstyle-report.html")
        ) {
            fileset(dir: sourceSets.main.output.resourcesDir)
        }
    }
}
